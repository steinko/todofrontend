
stages:
  - continuose-integration
  - build-docker-image
  - deploy-backend
  - deploy-frontend
  - acceptance-test
  - destroy

  
build-backend:
  image: amazoncorretto:18
  stage: continuose-integration
  script:
    - cd backeend 
    - ./gradlew clean assemble --info
    - cd ..
  artifacts:
    paths:
      - backend/build/libs/component.jar
     


test-backend:
  image: amazoncorretto:18
  stage: continuose-integration
  script:
    - cd backend 
    - ./gradlew test
    - cd ..

 

build-docker-image:
  stage: build-docker-image
  image: docker
  services: 
    - docker:dind
  script: 
    - cd component
    - docker build  -t steinko/todobackend .
    - docker login --username steinko  --password RoxyMusic11
    - docker push steinko/todobackend
  dependencies:
    - build-backend


 

deploy-backend:
  stage: deploy-backend
  image: pulumi/pulumi-nodejs
  variables:
     DATABASE_URL: " "
  script:
    - cd database
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
    - export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
    - pulumi login
    - pulumi stack select acceptanceTest
    - pulumi config set aws:region eu-north-1
    - pulumi up -y
    - DATABASE_URL=jdbc:postgresql://$(pulumi stack output  endpoint)
    - cd ..
    - cd backend
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
    - export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
    - pulumi login
    - pulumi stack select acceptanceTest
    - pulumi config set DATABASE_URL "$DATABASE_URL" 
    - pulumi up -y
    - touch backend.env
    - echo $(pulumi stack output  url) >> backend.env
    - cat backend.env
    - cd ..
  artifacts:
    paths:
      - backend/deployment/backend.env
 

backend-acceptance-test:
   stage: acceptance-test
   image: cypress/base:14.16.0
   script:
     - cd backendAcceptanceTest
     - cat ../backend/deployment/backend.env
     - export CYPRESS_BASE_URL='http://'$(cat ../backend/deployment/backend.env)'/'
     - npm i
     - npm run cypress:run
  
   
destroy-backend:
  stage: destroy
  image: pulumi/pulumi-nodejs
  script:
    - cd database
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select acceptanceTest
    - pulumi destroy -y
    - cd .. 
    - cd backend 
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
    - export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
    - pulumi login
    - pulumi stack select acceptanceTest
    - pulumi destroy -y
    - cd ..

